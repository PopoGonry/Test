Conditions:
	CondSelectionContains:
		ID: CondSelectionContains
		Patterns:
			[(world[ ]edit|we)] selection of %player% (contains|has) %location%
			%player%'s [(world[ ]edit|we)] selection (contains|has) %location%
			[(world[ ]edit|we)] selection of %player% does(n't| not) (contain|have) %location%
			%player%'s [(world[ ]edit|we)] selection does(n't| not) (contain|have) %location%
Effects:
	EffDrainLiquid:
		ID: EffDrainLiquid
		Patterns:
			(drain|remove) [all] liquid[s] at %location% (in|within) [a] radius [of] %double% (using|with) [edit[ ]session] %editsession%
	EffDrawLineWE:
		ID: EffDrawLineWE
		Patterns:
			(create|draw|make) [a[n]] (0¦(no(n|t)(-| )hollow|filled|)|1¦hollow) line from %location% to %location% (using|with) [edit[ ]session] %editsession% (using|with) [block[s]] %itemstacks% [with] thick[ness] %double%
	EffMakeCylinder:
		ID: EffMakeCylinder
		Patterns:
			(create|make) [a[n]] (0¦(no(n|t)(-| )hollow|filled|)|1¦hollow) cylinder at %location% [with] radius [of] %double%,[ ]%integer%(,[ ]| and )%double% (using|with) [edit[ ]session] %editsession% (using|with) [block[s]] %itemstacks%
	EffMakePyramid:
		ID: EffMakePyramid
		Patterns:
			(create|make) [a[n]] (0¦(no(n|t)(-| )hollow|filled|)|1¦hollow) pyramid at %location% [with] radius [of] %integer% (using|with) [edit[ ]session] %editsession% (using|with) [block[s]] %itemstacks%
	EffMakeSphere:
		ID: EffMakeSphere
		Patterns:
			(create|make) [a[n]] (0¦(no(n|t)(-| )hollow|filled|)|1¦hollow) (ellipsoid|sphere) [centered] at %location% [with] radius [of] %double%,[ ]%double%(,[ ]| and )%double% (using|with) [edit[ ]session] %editsession% (using|with) [block[s]] %itemstacks%
	EffMakeWalls:
		ID: EffMakeWalls
		Patterns:
			(create|make) wall[s] from %location% to %location% (using|with) [edit[ ]session] %editsession% (using|with) [block[s]] %itemstacks%
	EffNaturalize:
		ID: EffNaturalize
		Patterns:
			naturalize ([cuboid] region|[all] blocks) (from|between) %location% (to|and) %location% (using|with) [edit[ ]session] %editsession%
	EffPasteSchematic:
		ID: EffPasteSchematic
		Patterns:
			paste schem[atic] %string% at %location% using [edit[ ]session] %editsession% (0¦|1¦(ignor(e|ing)|without|[with] no) air)
	EffRememberChanges:
		ID: EffRememberChanges
		Patterns:
			make %player% (remember|be able to undo) changes (of|from) [edit[ ]session] %editsession%
	EffReplaceBlocksWE:
		ID: EffReplaceBlocksWE
		Patterns:
			replace [all] %itemstacks% (from|between) %location% (to|and) %location% with %itemstacks% (using|with) [edit[ ]session] %editsession%
	EffResourceSound:
		ID: EffResourceSound
		Patterns:
			play [raw] [([resource[ ]]pack)] sound %string% (for|to) %players% at %location% [[with] volume %-number%[[(,| and)] pitch %-number%]]
			play [raw] [([resource[ ]]pack)] sound %string% for %players% at %location% [[with] pitch %-number%[[(,| and)] volume %-number%]]
	EffSetBlocksWE:
		ID: EffSetBlocksWE
		Patterns:
			set [all] blocks (from|between) %location% (to|and) %location% to %itemstacks% (using|with) [edit[ ]session] %editsession%
	EffShowEntityEffect:
		ID: EffShowEntityEffect
		Patterns:
			(display|play|show) entity effect (0¦firework[s] explo(de|sion)|1¦hurt|2¦[[iron] golem] (give|offer) (rose|poppy)|3¦[sheep] eat grass|4¦wolf shake) at %entity%
	EffSimulateSnow:
		ID: EffSimulateSnow
		Patterns:
			(simulate snow at|place snow over) %location% (in|within) [a] radius [of] %double% (using|with) [edit[ ]session] %editsession%
			make %location% snowy (in|within) [a] radius [of] %double% (using|with) [edit[ ]session] %editsession%
	EffUndoRedoSession:
		ID: EffUndoRedoSession
		Patterns:
			(0¦undo|1¦redo) (change|edit)s (of|from) [edit[ ]session] %editsession%
Expressions:
	ExprChangedBlocksSession:
		ID: ExprChangedBlocksSession
		Return type: integer
		Changers:
			none
		Patterns:
			number of [all] changed blocks (in|of) [edit[ ]session] %editsession%
	ExprClickedInventory:
		ID: ExprClickedInventory
		Return type: Inventory
		Changers:
			add
			set
			remove
			remove all
			delete
		Patterns:
			[skstuff] clicked inventory
	ExprEditSessionLimit:
		ID: ExprEditSessionLimit
		Return type: integer
		Changers:
			set
			delete
			reset
		Patterns:
			[block] limit [change] of [edit[ ]session] %editsession%
	ExprFlagOfWGRegion:
		ID: ExprFlagOfWGRegion
		Return type: Text
		Changers:
			set
			delete
			reset
		Patterns:
			[(world[ ]guard|wg)] flag %wgflag% of %wgregion%
	ExprFlagsOfWGRegion:
		ID: ExprFlagsOfWGRegion
		Return type: WorldGuard Flag
		Changers:
			none
		Patterns:
			[(all|the)] [(world[ ]guard|wg)] flags of %wgregion%
	ExprGlideState:
		ID: ExprGlideState
		Return type: Boolean
		Changers:
			set
		Patterns:
			elytra (fl(y|ight)|glid(e|ing)) state of %livingentity%
			%livingentity%'s elytra (fl(y|ight)|glid(e|ing)) state
	ExprInventoryOwner:
		ID: ExprInventoryOwner
		Return type: Object
		Changers:
			none
		Patterns:
			[inventory] (owner|holder) of %inventory%
			%inventory%'s [inventory] (owner|holder)
	ExprNewEditSession:
		ID: ExprNewEditSession
		Return type: Edit Session
		Changers:
			none
		Patterns:
			[new] edit[ ]session in [world] %world% [with] [max[imum]] [block] limit [change] [of] %integer%
	ExprNoGravityState:
		ID: ExprNoGravityState
		Return type: Boolean
		Changers:
			set
		Patterns:
			no gravity (state|mode) of %entities%
			%entities%'s no gravity (state|mode)
	ExprRegionsWithinLocation:
		ID: ExprRegionsWithinLocation
		Return type: WorldGuard Region
		Changers:
			none
		Patterns:
			[all] [the] regions (containing|within|inside) %location%
	ExprSchematicArea:
		ID: ExprSchematicArea
		Return type: integer
		Changers:
			none
		Patterns:
			(0¦volume|1¦(x( |-)size|width)|2¦(y( |-)size|height)|3¦(z( |-)size|length)|4¦area) of schem[atic] [from] %string%
	ExprSelectionArea:
		ID: ExprSelectionArea
		Return type: integer
		Changers:
			none
		Patterns:
			(0¦volume|1¦(x( |-)size|width)|2¦(y( |-)size|height)|3¦(z( |-)size|length)|4¦area) of [(world[ ]edit|we)] selection of %player%
			%player%'s [(world[ ]edit|we)] selection (0¦volume|1¦(x( |-)size|width)|2¦(y( |-)size|height)|3¦(z( |-)size|length)|4¦area)
	ExprSelectionOfPlayer:
		ID: ExprSelectionOfPlayer
		Return type: Location
		Changers:
			delete
			reset
		Patterns:
			[(world[ ]edit|we)] selection of %player%
			%player%'s [(world[ ]edit|we)] selection
	ExprSelectionPos:
		ID: ExprSelectionPos
		Return type: Location
		Changers:
			set
		Patterns:
			[(world[ ]edit|we)] po(s|int)[ ](0¦1|1¦2) of %player%
			%player%'s [(world[ ]edit|we)] po(s|int)[ ](0¦1|1¦2)
	ExprSuperPickaxe:
		ID: ExprSuperPickaxe
		Return type: Boolean
		Changers:
			set
		Patterns:
			[(world[ ]edit|we)] super[ ]pick[axe] (state|mode) of %players%
			%players%'s [(world[ ]edit|we)] super[ ]pick[axe] (state|mode)
	ExprTimespanToNumber:
		ID: ExprTimespanToNumber
		Return type: Number
		Changers:
			none
		Patterns:
			%timespan% [converted] [in]to (0¦ticks|1¦sec[ond]s|2¦min[ute]s|3¦hours|4¦days)
	ExprToLowerCase:
		ID: ExprToLowerCase
		Return type: Text
		Changers:
			none
		Patterns:
			%string% [converted] to [all] lower[ ]case
			convert %string% to [all] lower[ ]case
			un[( |-)]capitalize [all] [char[acter]s (of|in)] %string%
	ExprToUpperCase:
		ID: ExprToUpperCase
		Return type: Text
		Changers:
			none
		Patterns:
			%string% [converted] to [all] (cap[ital]s|upper[ ]case)
			convert %string% to [all] (cap[ital]s|upper[ ]case)
			capitalize [all] [char[acter]s (of|in)] %string%
	ExprWGMemberOwner:
		ID: ExprWGMemberOwner
		Return type: Offlineplayer
		Changers:
			add
			remove
		Patterns:
			[the] (0¦members|1¦owner[s]) of [[the] (world[ ]guard|wg) region] %wgregion%
	ExprWordsToUpperCase:
		ID: ExprWordsToUpperCase
		Return type: Text
		Changers:
			none
		Patterns:
			(first|1st) (letter|char[acter]) (of|in) (each word|[all] words) (of|in) %string% [converted] to (cap[ital]s|upper[ ]case) (0¦|1¦ignoring [other] upper[ ]case [(char[acter]s|letters)])
			convert (first|1st) (letter|char[acter]) (of|in) (each word|[all] words) (of|in) %string% to (cap[ital]s|upper[ ]case) (0¦|1¦ignoring [other] upper[ ]case [(char[acter]s|letters)])
			capitalize (first|1st) (letter|char[acter]) (of|in) (each word|[all] words) (of|in) %string% (0¦|1¦ignoring [other] upper[ ]case [(char[acter]s|letters)])
Types:
	WorldGuard Flag:
		ID: Flag
		Patterns:
			[(world[ ]guard|wg) ]flag[s]
	WorldGuard Region:
		ID: ProtectedRegion
		Patterns:
			((protected|world[ ]guard|wg)[ ])region[s]