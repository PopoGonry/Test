Notice : All syntax is inherently prefixed with '[quar[s]k]'

Events :
  - [potion] splash[ing] [(of|with) %potioneffecttypes%]
  - linger[ing] potion splash[ing] [with [effect] types %potioneffecttypes*]
Conditions :
  - %block% (is|are) [a] wall banner
  - %block% (isn't|is not|aren't|are not) [a] wall banner
  - %livingentity% (has [got]|has( not|n't) [got]) [(the|a)] %potioneffecttype% [potion] [effect]
Effects :
  - apply [(banner|shield)] patterns of %itemstack% to %block%
  - apply %itemstack%['s] [(banner|shield)] pattern[s] to %block%
  - orient %livingentity% (towards|away from) %location%
  - make %livingentity% (face|look [at]) ([towards]|away from) %location%
  - force %livingentity% to (face|look [at]) ([towards]|away from) %location%
  - apply %potioneffects% to %livingentities%
  - milk %livingentities%
  - link @<.+?>@ to %object%
Expressions :
  - [potion] effects (on|of) %livingentities% >> returns a potion effect
  - %livingentities%['s] [potion] effects >> returns a potion effect
  - (tier|amplifier) of %potioneffecttype% on %itemstack% >> returns a number
  - %potioneffecttype%['s] (tier|amplifier) on %itemstack% >> returns a number
  - %potioneffecttype% for %timespan% [with] tier %number% [particles %-boolean% [(ambient|beacon) %-boolean% [colo[u]r %-color%]]]]] >> returns a potion effect
  - [the] beacon fuel[ing] [item] of %block% >> returns an item stack
  - %block%'[s] beacon fuel[ing] [item] >> returns an item stack
  - [m[iners]]n[eed]c[ool][s[hoes]] code of %itemstack% >> returns a text
  - %itemstack%['s] [m[iners]]n[eed]c[ool][s[hoes]] code >> returns a text
  - [the] bas(e|ic) color of %itemstack% >> returns a color
  - %itemstack%'[s] bas(e|ic) color >> returns a color
  - duration of %potioneffecttype% on %itemstack% >> returns a time span
  - %potioneffecttype%['s] duration on %itemstack% >> returns a time span
  - [the] ((first|primary)|second[ary]) [potion] effect of [beacon] %block% >> returns a potion effect
  - [beacon] %block%['s] ((first|primary)|second[ary]) [potion] effect >> returns a potion effect
  - [banner] pattern[s] of %block% >> returns a banner layer
  - %block%['s] [banner] pattern[s] >> returns a banner layer
  - [the] affected entities >> returns a living entity
  - [new] [banner] (layer|pattern) (with|using) (pattern [type]|type) %bannerpattern% [(with|and)] colo[u]r %color% >> returns a banner layer
  - [banner] pattern[s] of %itemstack% >> returns a banner layer
  - %itemstack%['s] [banner] pattern[s] >> returns a banner layer
  - [the] beacon (tier|level) of %block% >> returns a number
  - %block%'[s] beacon (tier|level) >> returns a number
  - [all] [potion] effects (of|on) [(entity|thrown potion|tipped arrow)] %entity% >> returns a potion effect
  - (banner|shield) from [m[iners]]n[eed]c[ool][s[hoes]] [code] %string% >> returns an item stack
  - [the] bas(e|ic) color of %block% >> returns a color
  - %block%'[s] bas(e|ic) color >> returns a color
  - [new] (banner|shield) (with|using) [pattern[s]] %bannerlayers% [(and|with)] base colo[u]r %color% >> returns an item stack
  - [potion] effects (on|of) %itemstack% >> returns a potion effect
  - %itemstack%['s] [potion] effects >> returns a potion effect
  - [the] duration of %potioneffect% >> returns a time span
  - %potioneffect%'[s] duration >> returns a time span
  - [the] [potion] effect type of %potioneffect% >> returns a potion
  - %potioneffect%'[s] [potion] effect type >> returns a potion
  - entities in range of [beacon] %block% >> returns a living entity
  - ([normal] potion|splash potion|linger[ing] potion|(potion|tipped) arrow) (with|using) [effects] %potioneffects% >> returns an item stack
  - [a] [new] random (banner|shield) >> returns an item stack
  - [the] banner item of %block% >> returns an item stack
  - %block%'[s] banner item >> returns an item stack
  - [the] tier of %potioneffect% >> returns a number
  - %potioneffect%'[s] tier >> returns a number
